@page "/processing"
@rendermode InteractiveServer

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using blazorTickets.Data
@using blazorTickets.Services
@using blazorTickets.Models
@inject ProtectedSessionStorage sessionStorage
@inject NavigationManager NavigationManager
@inject TicketService TicketService

@attribute [Authorize(Roles = "Technician")]
<PageTitle>Processing</PageTitle>

<h1>Process Tickets</h1>
@if (openTickets == null)
{
    <p>Loading open tickets...</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Description</th>
                <th>Severity</th>
                <th>Created At</th>
                <th>Created By</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ticket in openTickets)
            {
                <tr class="@GetSeverityClass(ticket.Severity)" @onclick="@(() => NavigateToTicketDetail(ticket))">
                    <td>@ticket.Id</td>
                    <td>@ticket.Title</td>
                    <td class="ticket-description">@ticket.Description</td>
                    <td>@ticket.Severity</td>
                    <td>@ticket.CreatedAt.ToString("dd-MM-yyyy")</td>
                    <td>@ticket.CreatedBy</td>
                </tr>
            }
        </tbody>
    </table>
}

<style>
    .ticket-title {
        max-width: 4rem;
        overflow-wrap: break-word;
        white-space: normal;
    }

    .ticket-description {
        max-width: 5rem;
        overflow-wrap: break-word;
        white-space: normal;
    }

    tr {
        cursor: pointer;
        font-size: 0.8rem;
        text-align: center;
    }
</style>
@code {
    private List<Ticket>? openTickets;

    protected override async Task OnInitializedAsync()
    {
        openTickets = await TicketService.GetOpenTicketsAsync();
    }

    private async void NavigateToTicketDetail(Ticket ticket)
    {
        await sessionStorage.SetAsync("ticketDetail", ticket);
        NavigationManager.NavigateTo("/ticket-detail");
    }

    private string GetSeverityClass(string severity)
    {
        return severity switch
        {
            "Low" => "table-success",
            "Medium" => "table-warning",
            "Critical" => "table-danger",
            "High" => "",
            "" => ""
        };
    }
}